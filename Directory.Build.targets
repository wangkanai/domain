<Project>
   <ItemGroup>
      <PackageReference Include="Microsoft.SourceLink.GitHub" PrivateAssets="all"/>
      <PackageReference Include="Microsoft.VisualStudio.SlnGen" PrivateAssets="all"/>
      <PackageReference Include="Microsoft.CodeAnalysis.Common" PrivateAssets="all"/>
      <PackageReference Include="Microsoft.CodeAnalysis.CSharp" PrivateAssets="all"/>
   </ItemGroup>

   <PropertyGroup Condition="$(MSBuildProjectName.Contains('Benchmark'))">
      <OutputType>Exe</OutputType>
      <Optimize>true</Optimize>
      <IsPackable>false</IsPackable>
      <SonarQubeExclude>true</SonarQubeExclude>
      <EnforceExtendedAnalyzerRules>false</EnforceExtendedAnalyzerRules>
   </PropertyGroup>

   <ItemGroup Condition="$(MSBuildProjectName.Contains('Benchmark'))">
      <PackageReference Include="BenchmarkDotNet"/>
   </ItemGroup>

   <PropertyGroup Condition="$(MSBuildProjectName.Contains('Tests'))">
      <OutputType>Exe</OutputType>
      <IsPackable>false</IsPackable>
      <IsTestProject>true</IsTestProject>
      <!-- Microsoft Testing Platform -->
      <UseMicrosoftTestingPlatformRunner>true</UseMicrosoftTestingPlatformRunner>
      <TestingPlatformDotnetTestSupport>true</TestingPlatformDotnetTestSupport>
      <!-- Code Coverage -->
      <CollectCoverage Condition="'$(CollectCoverage)' == ''">false</CollectCoverage>
      <CoverletOutputFormat Condition="'$(CoverletOutputFormat)' == ''">opencover</CoverletOutputFormat>
      <CoverletOutput Condition="'$(CoverletOutput)' == '' and '$(GITHUB_WORKSPACE)' != ''">$(GITHUB_WORKSPACE)/coverage/</CoverletOutput>
      <CoverletOutput Condition="'$(CoverletOutput)' == ''">$(MSBuildProjectDirectory)/coverage/</CoverletOutput>
      <ExcludeByFile>**/*.Designer.cs,**/*.g.cs</ExcludeByFile>
      <ExcludeByAttribute>GeneratedCodeAttribute,CompilerGeneratedAttribute</ExcludeByAttribute>
      <IncludeTestAssembly>false</IncludeTestAssembly>
   </PropertyGroup>

   <ItemGroup Condition="$(MSBuildProjectName.Contains('Tests'))">
      <Using Include="Xunit"/>
   </ItemGroup>

   <ItemGroup Condition="$(MSBuildProjectName.Contains('Tests'))">
      <Content Include="$(RepoRoot)/xunit.runner.json" CopyToOutputDirectory="PreserveNewest"/>
   </ItemGroup>

   <ItemGroup Condition="$(MSBuildProjectName.Contains('Tests'))">
      <PackageReference Include="Microsoft.TestPlatform.TestHost"/>
      <PackageReference Include="Microsoft.AspNetCore.TestHost"/>
      <PackageReference Include="Microsoft.NET.Test.Sdk"/>
      <PackageReference Include="Microsoft.Extensions.Logging.Console"/>
      <PackageReference Include="xunit.v3"/>
      <PackageReference Include="xunit.runner.visualstudio" PrivateAssets="all"/>
      <PackageReference Include="xunit.analyzers" PrivateAssets="all"/>
      <PackageReference Include="coverlet.msbuild" PrivateAssets="all"/>
      <PackageReference Include="coverlet.collector" PrivateAssets="all"/>
      <PackageReference Include="FluentAssertions"/>
      <PackageReference Include="Moq"/>
      <PackageReference Include="Microsoft.EntityFrameworkCore.InMemory"/>
   </ItemGroup>

</Project>
